:github_url: hide

{% macro print_paragraph(para, level=0, keep_indent=False) %}
{% filter indent(level * 3, first=True) %}
{% for line in para %}
   {% if line["@directive"] is defined %}

.. {{ line["@directive"] }}:: {{ line.get("@opts", "") }}


{{ print_desc(line["lines"], level + 1, True) }}

   {% elif line["@role"] is defined %}

:{{ line["@role"] }}: {{ line["lines"] }}
   {% else %}
      {% if keep_indent %}
{{ line }}
      {% else %}
{{ line.strip() }}
      {% endif %}
   {% endif %}
{% endfor %}
{% endfilter %}
{% endmacro %}

{% macro print_desc(desc, level=0, keep_indent=False) %}
{% for para in desc %}
{{ print_paragraph(para, level, keep_indent)}}

{% endfor %}
{% endmacro %}

{% macro print_func_qualifier(func) -%}
{{ 'explicit ' if func["@explicit"] == "yes" else "" }}
{%- endmacro %}

{% macro print_attrib_qualifier(attrib) -%}
{{ 'static ' if attrib["@static"] == "yes" else ""}}{{ 'mutable ' if attrib["@mutable"] == "yes" else ""}}
{%- endmacro%}

{% macro print_template_parameter(param) -%}
{{ param["type"]}}{{ " " ~ param.defname if param.defname else "" }}{{ " = " ~ param.defval if param.defval else "" }}
{%- endmacro %}


{% macro print_templateparameters(tparams) -%}
{% if tparams is defined -%}
{%- if tparams["param"]|length > 0 -%}
template<
{%- for param in tparams["param"] -%}
{{ print_template_parameter(param)}}{{ ", " if not loop.last else "" }}
{%- endfor -%}
>
{%- else -%}
template<>
{%- endif -%}
{%- endif -%}
{%- endmacro %}

{% macro print_func_tparams(func) -%}
{{ print_templateparameters(func["templateparamlist"])}}
{%- endmacro %}


.. _{{ id }}:

{{ name }}
{% for i in name %}={% endfor %}

.. cpp:namespace:: {{ name }}



{% if sectiondef["func"]|length > 0 %}

Functions
---------

{% for id, func in sectiondef.func.items() %}
.. _{{ id }}:

.. cpp:function:: {{ print_func_tparams(func) }} {{ print_func_qualifier(func) }} {{ func.definition }}{{ func.argsstring }}

{{ print_desc(func.briefdescription, level=1) }}
{{ print_desc(func.detaileddescription, level=1) }}
{% endfor %}
{% endif %}


{% if sectiondef.typedef|length > 0 %}

Type Aliases
------------

{% for id, func in sectiondef.typedef.items() %}
.. _{{ id }}:

.. cpp:type:: {{ print_func_tparams(func) }} {{ func.definition }}

{{ print_desc(func.briefdescription, level=1) }}
{{ print_desc(func.detaileddescription, level=1) }}
{% endfor %}
{% endif %}


