:github_url: hide

.. _{{ id }}:

{% macro normalize(s) -%}
{{ s if s == name else s | replace(name ~ "::", "")}}
{%- endmacro %}

{% macro print_relatives(relatives) %}
{% if relatives|length == 0 %}
None
{% else %}

{% for rel in relatives %}
* {{ rel }}
{% endfor %}
{% endif %}
{% endmacro %}

{% macro print_paragraph(para, level=0, keep_indent=False) %}
{% filter indent(level * 3, first=True) %}
{% for line in para %}
   {% if line["@directive"] is defined %}

.. {{ line["@directive"] }}:: {{ line.get("@opts", "") }}


{{ print_desc(line["lines"], level + 1, True) }}

   {% elif line["@role"] is defined %}
   
:{{ line["@role"] }}: {{ line["lines"] }}
   {% else %}
      {% if keep_indent %}
{{ normalize(line) }}
      {% else %}
{{ normalize(line.strip()) }}
      {% endif %}
   {% endif %}
{% endfor %}
{% endfilter %}
{% endmacro %}

{% macro print_desc(desc, level=0, keep_indent=False) %}
{% for para in desc %}
{{ print_paragraph(para, level, keep_indent)}}

{% endfor %}
{% endmacro %}

{% macro print_func_qualifier(func) -%}
{{ 'explicit ' if func["@explicit"] == "yes" else "" }}
{%- endmacro %}

{% macro print_attrib_qualifier(attrib) -%}
{{ 'static ' if attrib["@static"] == "yes" else ""}}{{ 'mutable ' if attrib["@mutable"] == "yes" else ""}}
{%- endmacro%}

{% macro print_template_parameter(param) -%}
{{ param["type"]}}{{ " " ~ param.get("defname", "") }}
{%- endmacro %}


{% macro print_templateparameters(tparams) -%}
{% if tparams is defined -%}
{%- if tparams["param"]|length > 0 -%}
template<
{%- for param in tparams["param"] -%}
{{ print_template_parameter(param)}}{{ ", " if not loop.last else "" }}
{%- endfor -%}
>
{%- else -%}
template<>
{%- endif -%}
{%- endif -%}
{%- endmacro %}

{% macro print_func_tparams(func) -%}
{{ print_templateparameters(func["templateparamlist"])}}
{%- endmacro %}

{{ name }}
{% for i in name %}={% endfor %}

.. cpp:class:: {{ print_templateparameters(templateparamlist)}} {{ name }}
{% filter indent(3) %}

{% for param in templatedescription %}
:{{ param["@role"] }}: {{ param["lines"] }}{% if not loop.last %}, {% endif %}
{% endfor %}


Inheritance
-----------

Inherited by:
{{ print_relatives(derivedcompoundref) }}

Inherits:
{{ print_relatives(basecompoundref) }}

Description  
-----------  

{{ print_desc(briefdescription) }}

{{ print_desc(detaileddescription) }}

{% if 'id' in specializationof %}
Specialization of :ref:`{{ specializationof.name }}<{{specializationof.id}}>`  

{% endif %}

{% if specializations|length > 0 %}
.. rst-class:: classref-reftable-group

Specializations
---------------

.. toctree::
   :maxdepth: 1

{% for key,spec in specializations.items() %}
   {{ key }}
{% endfor %}
{% endif %}

{% if innerclass|length > 0 %}
.. rst-class:: classref-reftable-group

Inner Classes
-------------

.. toctree::
   :maxdepth: 1

{% for ic in innerclass %}
   {{ ic }}
{% endfor %}
{% endif %}

{% if sectiondef["public-func"]|length > 0 or sectiondef["protected-func"]|length > 0 %}
.. rst-class:: classref-reftable-group

Methods
-------


{% for id, func in sectiondef["public-func"].items() %}
.. _{{ id }}:
.. cpp:function:: {{ print_func_tparams(func) }} {{ print_func_qualifier(func) }}{{ normalize(func.definition) }}{{ normalize(func.argsstring) }}

{{ print_desc(func.briefdescription, level=1) }}
{{ print_desc(func.detaileddescription, level=1) }}
{% endfor %}
{% endif %}

{% if sectiondef["public-attrib"]|length > 0 %}
.. rst-class:: classref-reftable-group

Vars
----

{% for id, attrib in sectiondef["public-attrib"].items() %}
.. _{{ id }}:
.. cpp:member:: {{ print_attrib_qualifier(attrib) }}{{ normalize(attrib.definition) }}{{ normalize(attrib.initializer) }}

{{ print_desc(attrib.briefdescription, level=1) }}
{{ print_desc(attrib.detaileddescription, level=1) }}
{% endfor %}
{% endif %}
{% endfilter %}